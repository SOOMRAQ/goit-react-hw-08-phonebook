{"version":3,"file":"static/js/488.9865dfb4.chunk.js","mappings":"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","sources":["services/checkContacts.js","components/Form/Form.styled.js","components/Form/Form.jsx","components/SingleContact/SingleContact.styled.js","components/SingleContact/SingleContact.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","scenes/Phonebook/Phonebook.jsx"],"sourcesContent":["import { Notify } from 'notiflix';\n\nconst checkContacts = (contact, data) => {\n  if (contact.name === data.name) {\n    Notify.failure(`${data.name} is already in contacts.`);\n    return contact;\n  } else if (contact.number === data.number) {\n    Notify.failure(\n      `This number (${data.number}) is already in ${contact.name} contact.`\n    );\n\n    return contact;\n  }\n};\n\nexport default checkContacts;\n","import styled from '@emotion/styled';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  width: 280px;\n`;\n\nexport const StyledLabel = styled.label`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 14px;\n`;\n\nexport const StyledInput = styled.input`\n  outline: none;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  font-family: 'Cinzel', serif;\n  padding: 4px;\n  transition: border 400ms ease;\n\n  :hover,\n  :focus {\n    border-color: steelblue;\n  }\n`;\nexport const StyledButton = styled.button`\n  cursor: pointer;\n  font-family: 'Cinzel', serif;\n  background: none;\n  border: none;\n  border: 1px solid steelblue;\n  padding: 4px 16px;\n  align-self: center;\n  transition: color 400ms ease, background-color 400ms ease;\n\n  :hover {\n    background-color: steelblue;\n    color: white;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/selectors';\nimport { addContact } from 'redux/thunks';\nimport checkContacts from 'services/checkContacts';\nimport {\n  StyledForm,\n  StyledInput,\n  StyledLabel,\n  StyledButton,\n} from './Form.styled';\n\nconst Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const isInContactsList = contacts.filter(contact =>\n      checkContacts(contact, { name, number })\n    ).length;\n\n    if (!isInContactsList) {\n      dispatch(addContact({ name, number }));\n    }\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <div>\n      <StyledForm onSubmit={handleSubmit}>\n        <StyledLabel>\n          Name\n          <StyledInput\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </StyledLabel>\n        <StyledLabel>\n          Number\n          <StyledInput\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </StyledLabel>\n\n        <StyledButton type=\"submit\" className=\"submit-btn\">\n          Add contact\n        </StyledButton>\n      </StyledForm>\n    </div>\n  );\n};\n\nexport default Form;\n","import styled from '@emotion/styled';\n\nexport const StyledItem = styled.li`\n  flex-basis: calc(50% - 30px);\n  font-size: 12px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  white-space: nowrap;\n  border: 1px dashed steelblue;\n  border-radius: 50px;\n  padding: 4px 10px;\n`;\n\nexport const StyledList = styled.ul`\n  display: flex;\n  gap: 4px;\n  font-size: 16px;\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/thunks';\nimport { StyledItem, StyledList } from './SingleContact.styled';\nimport { IoIosCall } from 'react-icons/io';\nimport { AiFillDelete } from 'react-icons/ai';\n\nconst SingleContact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const words = name.split(' ');\n  const letters = [];\n  words.forEach(word => letters.push(word[0]));\n  const initials = letters.join('');\n\n  const handleDeleteContact = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <StyledItem>\n      <div className=\"initials\">{initials}</div>\n      <div>\n        <p>{name}</p>\n        <p>{number}</p>\n      </div>\n      <StyledList id={name}>\n        <li>\n          <a href={`tel:${number}`} style={{ color: 'green' }}>\n            <IoIosCall />\n          </a>\n        </li>\n        <li onClick={handleDeleteContact} style={{ color: 'red' }}>\n          <AiFillDelete style={{ cursor: 'pointer' }} />\n        </li>\n      </StyledList>\n    </StyledItem>\n  );\n};\n\nSingleContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default SingleContact;\n","import styled from '@emotion/styled';\n\nexport const StyledList = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/selectors';\nimport { fetchContacts } from 'redux/thunks';\nimport SingleContact from 'components/SingleContact';\nimport { StyledList } from './ContactsList.styled';\n\nconst ContactsList = () => {\n  const contacts = useSelector(getContacts);\n  const filterValue = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = () => {\n    if (contacts?.length) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filterValue)\n      );\n    }\n  };\n\n  return (\n    <>\n      <StyledList>\n        {filteredContacts() ? (\n          filteredContacts()?.map(({ id, name, number }) => {\n            return (\n              <SingleContact key={id} id={id} name={name} number={number} />\n            );\n          })\n        ) : (\n          <div>\n            <h3>No contacts</h3>\n          </div>\n        )}\n      </StyledList>\n    </>\n  );\n};\n\nexport default ContactsList;\n","import styled from '@emotion/styled';\n\nexport const StyledInput = styled.input`\n  outline: none;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  font-family: 'Cinzel', serif;\n  padding: 4px;\n  transition: border 400ms ease;\n\n  :hover,\n  :focus {\n    border-color: steelblue;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/filterSlice';\nimport { getFilter } from 'redux/selectors';\nimport { StyledInput } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleChange = event => {\n    const { value } = event.target;\n    dispatch(changeFilter(value.toLowerCase()));\n  };\n  return (\n    <form>\n      <StyledInput\n        id=\"filter\"\n        type=\"text\"\n        onChange={event => handleChange(event)}\n        value={filter}\n        placeholder=\"Filter by name\"\n      />\n    </form>\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  padding-top: 30px;\n  padding-left: 60px;\n  padding-right: 35px;\n`;\nexport const Title = styled.h2`\n  text-transform: uppercase;\n`;\n","import PropTypes from 'prop-types';\nimport { Section, Title } from './Section.styled';\n\nconst PhonebookSection = ({ title, children }) => {\n  return (\n    <Section>\n      <Title>{title}</Title>\n      {children}\n    </Section>\n  );\n};\n\nexport default PhonebookSection;\n\nPhonebookSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import Form from 'components/Form';\nimport ContactsList from 'components/ContactsList';\nimport Filter from 'components/Filter';\nimport PhonebookSection from 'components/Section/Section';\nimport { StyledContainer } from '../../components/App/App.styled';\n\nconst Phonebook = () => {\n  return (\n    <>\n      <StyledContainer>\n        <PhonebookSection title=\"Phonebook\">\n          <Form />\n        </PhonebookSection>\n        <PhonebookSection title=\"Contacts\">\n          <Filter />\n          <ContactsList />\n        </PhonebookSection>\n      </StyledContainer>\n    </>\n  );\n};\n\nexport default Phonebook;\n"],"names":["contact","data","name","Notify","number","StyledForm","styled","StyledLabel","StyledInput","StyledButton","useState","setName","setNumber","dispatch","useDispatch","contacts","useSelector","getContacts","handleChange","event","currentTarget","value","reset","onSubmit","preventDefault","filter","checkContacts","length","addContact","type","onChange","pattern","title","required","className","StyledItem","StyledList","id","words","split","letters","forEach","word","push","initials","join","href","style","color","onClick","deleteContact","cursor","filterValue","getFilter","useEffect","fetchContacts","filteredContacts","toLowerCase","includes","map","target","changeFilter","placeholder","Section","Title","children"],"sourceRoot":""}